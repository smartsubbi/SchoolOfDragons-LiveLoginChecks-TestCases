<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="4" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Live Test Cases Suite" duration-ms="236531" started-at="2016-05-07T09:56:20Z" finished-at="2016-05-07T10:00:17Z">
    <groups>
    </groups>
    <test name="Live Tests" duration-ms="236531" started-at="2016-05-07T09:56:20Z" finished-at="2016-05-07T10:00:17Z">
      <class name="com.SchoolOfDragons.LiveLoginChecks.TestCase1">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase1@724af044]" name="setUp" is-config="true" duration-ms="1864" started-at="2016-05-07T15:26:20Z" finished-at="2016-05-07T15:26:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ValidAuthorisedPlayerLogin(java.lang.String)[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase1@724af044]" name="ValidAuthorisedPlayerLogin" duration-ms="51830" started-at="2016-05-07T15:26:22Z" finished-at="2016-05-07T15:27:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Live Test Cases]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidAuthorisedPlayerLogin -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult)[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase1@724af044]" name="afterTest" is-config="true" duration-ms="1" started-at="2016-05-07T15:27:14Z" finished-at="2016-05-07T15:27:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidAuthorisedPlayerLogin status=SUCCESS method=TestCase1.ValidAuthorisedPlayerLogin(java.lang.String)[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase1@724af044] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase1@724af044]" name="tearDown" is-config="true" duration-ms="228" started-at="2016-05-07T15:27:14Z" finished-at="2016-05-07T15:27:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="printReportPath()[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase1@724af044]" name="printReportPath" is-config="true" duration-ms="0" started-at="2016-05-07T15:29:41Z" finished-at="2016-05-07T15:29:41Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: keys should be a string
  (Session info: chrome=50.0.2661.94)
  (Driver info: chromedriver=2.21.371459 (36d3d07f660ff2bc1bf28a75d1cdabed0983e7c4),platform=Windows NT 10.0 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 56 milliseconds
Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'
System info: host: 'DESKTOP-J13P4A7', ip: '192.168.1.3', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_74'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, chrome={chromedriverVersion=2.21.371459 (36d3d07f660ff2bc1bf28a75d1cdabed0983e7c4), userDataDir=C:\Users\subbu\AppData\Local\Temp\scoped_dir5484_28505}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=50.0.2661.94, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 99409b61b68ef2b56ba433104ef8a973]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: keys should be a string
  (Session info: chrome=50.0.2661.94)
  (Driver info: chromedriver=2.21.371459 (36d3d07f660ff2bc1bf28a75d1cdabed0983e7c4),platform=Windows NT 10.0 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 56 milliseconds
Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'
System info: host: 'DESKTOP-J13P4A7', ip: '192.168.1.3', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_74'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, chrome={chromedriverVersion=2.21.371459 (36d3d07f660ff2bc1bf28a75d1cdabed0983e7c4), userDataDir=C:\Users\subbu\AppData\Local\Temp\scoped_dir5484_28505}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=50.0.2661.94, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 99409b61b68ef2b56ba433104ef8a973
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:122)
	at ReUse.SendMail.sendMailOnlyContent(SendMail.java:58)
	at com.SchoolOfDragons.LiveLoginChecks.TestCase1.printReportPath(TestCase1.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.TestRunner.afterRun(TestRunner.java:1012)
	at org.testng.TestRunner.run(TestRunner.java:636)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printReportPath -->
      </class> <!-- com.SchoolOfDragons.LiveLoginChecks.TestCase1 -->
      <class name="com.SchoolOfDragons.LiveLoginChecks.TestCase4">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase4@29ee9faa]" name="setUp" is-config="true" duration-ms="20" started-at="2016-05-07T15:28:50Z" finished-at="2016-05-07T15:28:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ValidNonAuthorisedPlayerLogin(java.lang.String)[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase4@29ee9faa]" name="ValidNonAuthorisedPlayerLogin" duration-ms="51182" started-at="2016-05-07T15:28:50Z" finished-at="2016-05-07T15:29:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Live Test Cases]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidNonAuthorisedPlayerLogin -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult)[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase4@29ee9faa]" name="afterTest" is-config="true" duration-ms="1" started-at="2016-05-07T15:29:41Z" finished-at="2016-05-07T15:29:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidNonAuthorisedPlayerLogin status=SUCCESS method=TestCase4.ValidNonAuthorisedPlayerLogin(java.lang.String)[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase4@29ee9faa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase4@29ee9faa]" name="tearDown" is-config="true" duration-ms="88" started-at="2016-05-07T15:29:41Z" finished-at="2016-05-07T15:29:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.SchoolOfDragons.LiveLoginChecks.TestCase4 -->
      <class name="com.SchoolOfDragons.LiveLoginChecks.TestCase2">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase2@4678c730]" name="setUp" is-config="true" duration-ms="19" started-at="2016-05-07T15:27:14Z" finished-at="2016-05-07T15:27:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ValidAuthorisedParentLogin(java.lang.String)[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase2@4678c730]" name="ValidAuthorisedParentLogin" duration-ms="46926" started-at="2016-05-07T15:27:14Z" finished-at="2016-05-07T15:28:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Live Test Cases]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidAuthorisedParentLogin -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult)[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase2@4678c730]" name="afterTest" is-config="true" duration-ms="1" started-at="2016-05-07T15:28:01Z" finished-at="2016-05-07T15:28:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidAuthorisedParentLogin status=SUCCESS method=TestCase2.ValidAuthorisedParentLogin(java.lang.String)[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase2@4678c730] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase2@4678c730]" name="tearDown" is-config="true" duration-ms="60" started-at="2016-05-07T15:28:01Z" finished-at="2016-05-07T15:28:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.SchoolOfDragons.LiveLoginChecks.TestCase2 -->
      <class name="com.SchoolOfDragons.LiveLoginChecks.TestCase3">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase3@6767c1fc]" name="setUp" is-config="true" duration-ms="14" started-at="2016-05-07T15:28:01Z" finished-at="2016-05-07T15:28:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ValidNonAuthorisedParentLogin(java.lang.String)[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase3@6767c1fc]" name="ValidNonAuthorisedParentLogin" duration-ms="48877" started-at="2016-05-07T15:28:01Z" finished-at="2016-05-07T15:28:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Live Test Cases]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidNonAuthorisedParentLogin -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestResult)[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase3@6767c1fc]" name="afterTest" is-config="true" duration-ms="0" started-at="2016-05-07T15:28:50Z" finished-at="2016-05-07T15:28:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidNonAuthorisedParentLogin status=SUCCESS method=TestCase3.ValidNonAuthorisedParentLogin(java.lang.String)[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase3@6767c1fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.SchoolOfDragons.LiveLoginChecks.TestCase3@6767c1fc]" name="tearDown" is-config="true" duration-ms="47" started-at="2016-05-07T15:28:50Z" finished-at="2016-05-07T15:28:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.SchoolOfDragons.LiveLoginChecks.TestCase3 -->
    </test> <!-- Live Tests -->
  </suite> <!-- Live Test Cases Suite -->
</testng-results>
